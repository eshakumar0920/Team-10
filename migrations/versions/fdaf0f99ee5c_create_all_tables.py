"""Create all tables

Revision ID: fdaf0f99ee5c
Revises: 
Create Date: 2025-03-13 16:27:47.840599

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fdaf0f99ee5c'
down_revision = None
branch_labels = None
depends_on = None

'''
def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level_number', sa.Integer(), nullable=False),
    sa.Column('xp_required', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('perks', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level_number')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('current_level', sa.Integer(), nullable=True),
    sa.Column('current_xp', sa.Integer(), nullable=True),
    sa.Column('total_xp_earned', sa.Integer(), nullable=True),
    sa.Column('join_date', sa.DateTime(), nullable=True),
    sa.Column('profile_picture', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('user_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=64), nullable=False),
    sa.Column('xp_earned', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('related_event_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['related_event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('xp_reward', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('organizer_xp_reward', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['creator_id'], ['id'])

    with op.batch_alter_table('participants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('xp_earned', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('attendance_status', sa.String(length=20), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    # ### end Alembic commands ###
    '''
def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level_number', sa.Integer(), nullable=False),
    sa.Column('xp_required', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('perks', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level_number')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('current_level', sa.Integer(), nullable=True),
    sa.Column('current_xp', sa.Integer(), nullable=True),
    sa.Column('total_xp_earned', sa.Integer(), nullable=True),
    sa.Column('join_date', sa.DateTime(), nullable=True),
    sa.Column('profile_picture', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    
    # Insert a user with ID=1 to satisfy existing foreign key references
    op.execute("INSERT INTO users (id, username, email, current_level, current_xp, total_xp_earned) VALUES (1, 'admin', 'admin@example.com', 1, 0, 0)")
    
    # Add the columns to events table before adding foreign key
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('xp_reward', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('organizer_xp_reward', sa.Integer(), nullable=True))
    
    # Add columns to participants table before adding foreign key
    with op.batch_alter_table('participants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('xp_earned', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('attendance_status', sa.String(length=20), nullable=True))

    # Now create user_activities table with its foreign keys
    op.create_table('user_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=64), nullable=False),
    sa.Column('xp_earned', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('related_event_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['related_event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Add foreign keys last
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'users', ['creator_id'], ['id'])

    with op.batch_alter_table('participants', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('participants', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('attendance_status')
        batch_op.drop_column('xp_earned')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('organizer_xp_reward')
        batch_op.drop_column('xp_reward')

    op.drop_table('user_activities')
    op.drop_table('users')
    op.drop_table('levels')
    # ### end Alembic commands ###
